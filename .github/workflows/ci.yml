name: CI - Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
          MYSQL_USER: user
          MYSQL_PASSWORD: pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uuser -ppass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mongo:
        image: mongo:6
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: pass
        ports:
          - 27017:27017

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create .env file
        run: |
          echo "DB_HOST=mysql" >> .env
          echo "DB_NAME=mydb" >> .env
          echo "DB_USERNAME=user" >> .env
          echo "DB_PASSWORD=pass" >> .env
          echo "MONGODB_HOST=mongo" >> .env

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Wait for MySQL database
        run: |
          echo "Waiting for MySQL database to be ready..."
          for i in {1..30}; do
            if mysql -hmysql -uuser -ppass -e "USE mydb;" &> /dev/null; then
              echo "Database ready!"
              break
            fi
            echo "Database not ready yet, waiting..."
            sleep 2
          done

      - name: Initialize MySQL database
        run: docker exec -i log430-a25-labo1-store_manager_app-1 python src/init_db.py || echo "Init script skipped (container not found)"

      - name: Run tests
        run: pytest src/tests
