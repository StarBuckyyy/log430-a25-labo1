name: CI - Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Récupérer le dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Installer Docker et Docker Compose
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io docker-compose

      # 3️⃣ Lancer les services Docker Compose
      - name: Build and start Docker services
        run: docker-compose up -d --build

      # 4️⃣ Attendre que MySQL soit prêt
      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL..."
          until docker exec $(docker-compose ps -q mysql) mysqladmin ping -h "localhost" --silent; do
            sleep 2
          done
          echo "MySQL is ready!"

      # 5️⃣ Exécuter le script d'initialisation de la base si nécessaire
      - name: Initialize MySQL database
        run: |
          docker exec -i $(docker-compose ps -q mysql) sh -c "mysql -uuser -ppass mydb < /docker-entrypoint-initdb.d/init.sql"

      # 6️⃣ Installer les dépendances Python dans le conteneur app
      - name: Install Python dependencies
        run: |
          docker exec $(docker-compose ps -q store_manager_app) bash -c "python -m pip install --upgrade pip && pip install -r requirements.txt pytest mysql-connector-python pymongo python-dotenv"

      # 7️⃣ Lancer les tests dans le conteneur app
      - name: Run tests
        run: |
          docker exec $(docker-compose ps -q store_manager_app) pytest src/tests

      # 8️⃣ Nettoyer les conteneurs après les tests
      - name: Tear down Docker Compose
        run: docker-compose down -v
